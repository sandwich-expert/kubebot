#!/usr/bin/env bash
# Locally build the Docker image, using the abreviated git commit as the tag
# To be run locally during dev and by Jenkins

# Location - root of project
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
cd $DIR/../

# Clean and make the git.properties to include in the image
rm ./git.properties
./make-git-properties.sh

source ./build/settings-env

# Cleanup 
# Remove any existing builds for this image to save space
# Use force because they can always be downloaded / built again 
# This does not appear to kill other proceses that may be pushing the image
PREV_IMAGES=$(docker images --quiet $REPOSITORY)
if [[ $PREV_IMAGES ]]; then
  echo "[INFO] Previous images to remove:"
  echo $PREV_IMAGES

  docker rmi --force $PREV_IMAGES
else
  echo "[INFO] No previous images to remove."
fi

# Build
echo "[INFO] Building image $IMAGE_NAME"
docker build --tag $IMAGE_NAME ./

# Always remove intermediate containers, we care about space on the build 
# server 
IMAGES=$(docker images -a -q --filter "dangling=true")
if [[ $IMAGES ]]; then
  echo "[INFO] Removing intermediate images"
  echo $IMAGES
  docker rmi --force $IMAGES
else
  echo "[INFO] No intermediate images to remove."
fi
